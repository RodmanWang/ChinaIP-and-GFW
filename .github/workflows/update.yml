name: Update ChinaIP-and-GFW database

on:
  workflow_dispatch:
  schedule: 
    - cron:  '30 0/3 * * *' 
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"
      
jobs:
  build:
    name: Generate GeoIP2 database
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: stable
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
        
    - name: Create dist folder
      run: 
           mkdir -p dist
           mkdir -p dist2
           mkdir -p dist3
           mkdir -p dist4
    - name: Compile GeoIP conversion bin (Golang)
      run: /bin/bash ./build.sh

    - name: Obtain CN IP lists
      run: |
        #chinaIP
        curl -LR -o dist/ChinaIPv4-1.txt "https://raw.githubusercontent.com/17mon/china_ip_list/master/china_ip_list.txt"
        curl -LR -o dist/ChinaIPv4-2.txt "https://raw.githubusercontent.com/gaoyifan/china-operator-ip/ip-lists/china.txt"
        curl -LR -o dist/ChinaIPv4-3.txt "https://raw.githubusercontent.com/metowolf/iplist/master/data/country/CN.txt"
        curl -LR -o dist/ChinaIPv6.txt "https://raw.githubusercontent.com/gaoyifan/china-operator-ip/ip-lists/china6.txt"
        curl -LR -o dist/exclude-domestic-ip.conf "https://raw.githubusercontent.com/RodmanWang/ChinaIP-and-GFW/main/patch/exclude-domestic-ip.txt"
        
        #bogus-nxdomain   
        curl -LR -o dist2/bogus-nxdomain1.conf "https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/bogus-nxdomain.china.conf"
        curl -LR -o dist2/bogus-nxdomain2.conf "https://raw.githubusercontent.com/RodmanWang/ChinaIP-and-GFW/main/patch/bogus-nxdomain-added.txt"
        
        #Domestic-Domain
        curl -LR -o dist3/domains.china.conf "https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/accelerated-domains.china.conf"
        curl -LR -o dist3/domestic-added.conf "https://raw.githubusercontent.com/RodmanWang/ChinaIP-and-GFW/main/patch/domestic-added.txt"
        curl -LR -o dist3/exclude-domestic.txt "https://raw.githubusercontent.com/RodmanWang/ChinaIP-and-GFW/main/patch/exclude-domestic.txt"
        
        #GFW
        curl -LR -o dist4/gfw2.txt "https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/gfw.txt"
        curl -LR -o dist4/gfw3.txt "https://raw.githubusercontent.com/RodmanWang/ChinaIP-and-GFW/main/patch/gfw-added.txt"
        curl -LR -o dist4/exclude-gfw.conf "https://raw.githubusercontent.com/RodmanWang/ChinaIP-and-GFW/main/patch/exclude-gfw.txt"
        
    - name: Merge and IP lists and remove duplicates
      run: |
        #CIDR列表合并
        //awk '!/^( *#.*| *$)/' dist/*.txt > dist/ChinaIPv4v6_tamp.txt
        cat dist/*.txt | dist/ipchange > dist/ChinaIPv4v6.txt
        #
        #生成不包含exclude-domestic.txt中ip的ChinaIPv4v6地址
        grep -Fvf dist/exclude-domestic-ip.conf dist/ChinaIPv4v6.txt | grep -Ev "^$|^\s*#" > dist/ChinaIP.txt
        #
        #生成不包含exclude-domestic.txt中ip的ChinaIPV4地址
        grep -Fvf dist/exclude-domestic-ip.conf dist/ChinaIPv4v6.txt | grep -Ev "^$|^\s*#|.*\:.*" > dist/ChinaIPv4.txt
        #
        #生成不包含exclude-domestic.txt中ip的ChinaIPV6地址
        grep -Fvf dist/exclude-domestic-ip.conf dist/ChinaIPv4v6.txt | grep -Ev "^$|^\s*#|.*\..*" > dist/ChinaIPv6.txt  
        #
        #每行数据开头添加“blacklist-ip ”字符，生成SmartDNS使用的黑名单IP
        awk '{print "blacklist-ip " $0}' dist/ChinaIP.txt > dist/BlacklistIP.conf
        #
        #行数据开头添加“whitelist-ip ”字符，生成SmartDNS使用的白名单IP
        awk '{print "whitelist-ip " $0}' dist/ChinaIP.txt > dist/WhitelistIP.conf
        #
        #

        #
        #
        #汇总、删除每行数据中的“bogus-nxdomain=”字符
        awk '!/^( *#.*| *$)/' dist2/*.conf | awk '{sub(/bogus-nxdomain=/,"");print}' > dist2/nxdomain11.conf
        #
        #ip格式排序，删除空行，注释行，重复行
        awk '!seen[$0]++' dist2/nxdomain11.conf | sort -t'.' -k1,1n -k2,2n -k3,3n -k4,4n | grep -Ev "^$|^\s*#" > dist2/nxdomain2.conf
        #
        #每行数据开头添加“bogus-nxdomain ”，生成SmartDNS使用的忽略IP解析文件
        awk '{print "bogus-nxdomain " $0 "/32"}' dist2/nxdomain2.conf > dist2/BogusNxdomain.conf
        #
        #生成openclash使用的ip格式
        awk '{print "  - \x27" $0 "/32\x27"}' dist2/nxdomain2.conf > dist2/nxdomain3.conf
        #添加3注释，时间，行数
        awk -v datetime="$(date +'%Y-%m-%d %H:%M:%S')" 'BEGIN { lines=0 } { content[lines++] = $0 } END {print "payload:"; print "# > AD & BanIP"; print "# > lines: " lines; print "# > Times: " datetime; for(i=0; i<lines; i++) print content[i] }' dist2/nxdomain3.conf > dist2/Ad·IP.yaml
        #
        #

        #
        #删除每行数据中的"server=/“或”/114.114.114.114“字符，并每行顶格，方便汇总，便与后续排序
        awk '{gsub(/server=\//,""); gsub(/\/114\.114\.114\.114/,""); gsub(/[[:space:]]*/,"")}1' dist3/domains.china.conf > tmpfile && mv tmpfile dist3/domains.china.conf  
        #
        #汇总，字符格式排序，删除空行，注释行，重复行
        awk '!/^( *#.*| *$)/' dist3/*.conf | awk '!seen[$0]++' | sort -t. -k1 | grep -Ev "^$|^\s*#" > dist3/China2.conf
        #
        #生成不包含exclude-domestic.txt文本中的国内域名列表
        grep -Fvf dist3/exclude-domestic.txt dist3/China2.conf > dist3/ChinaDomain3.conf
        #
        #每行开头添加“server=/”字符，末尾添加“/114.114.114.114”字符，用于一般代理软件使用
        awk '{print "server=/" $0 "/114.114.114.114"}' dist3/ChinaDomain3.conf > dist3/ChinaDomain2.conf
        #
        #每行开头添加“nameserver /”字符，末尾添加“/domestic”字符，生成SmartDNS使用的、指定解析组的国内域名文件
        awk '{print "nameserver /" $0 "/domestic"}' dist3/ChinaDomain3.conf > dist3/ChinaDomain.conf
        #
        #每行开头添加“- DOMAIN-SUFFIX,”字符，生成OpenClash使用的Domestic国内域名文件
        awk '{print "  - DOMAIN-SUFFIX," $0}' dist3/ChinaDomain3.conf > dist3/ChinaDomain4.conf
        #添加3注释，时间，行数
        awk -v datetime="$(date +'%Y-%m-%d %H:%M:%S')" 'BEGIN { lines=0 } { content[lines++] = $0 } END {print "payload:"; print "# > lines: " lines; print "# > Times: " datetime; for(i=0; i<lines; i++) print content[i] }' dist3/ChinaDomain4.conf > dist3/Domestic.yaml
        #
        #
        
        #
        #汇总
        awk '!/^( *#.*| *$)/' dist4/*.txt > dist4/gfw1.txt
        #
        #生成不包含exclude-gfw.conf中域名的gfw地址
        grep -Fvf dist4/exclude-gfw.conf dist4/gfw1.txt > dist4/gfw0.txt
        #
        #字符格式排序，删除空行，注释行，重复行
        awk '!seen[$0]++' dist4/gfw0.txt | sort -t. -k1 | grep -Ev "^$|^\s*#" > dist4/GFW.txt
        #
        #每行数据开头添加“||”字符，生成代理使用的格式GFW 
        awk '!seen[$0]++' dist4/GFW.txt | sed "s/^/\|\|&/p" | uniq > dist4/AutoGFW.txt
        #
        #每行数据开头添加“- DOMAIN-SUFFIX,”字符，生成OpenClash使用的gfw域名文件
        awk '{print "  - DOMAIN-SUFFIX," $0}' dist4/GFW.txt > dist4/GFW00000.txt
        #添加3注释，时间，行数
        awk -v datetime="$(date +'%Y-%m-%d %H:%M:%S')" 'BEGIN { lines=0 } { content[lines++] = $0 } END {print "payload:"; print "# > lines: " lines; print "# > Times: " datetime; for(i=0; i<lines; i++) print content[i] }' dist4/GFW00000.txt > dist4/Proxy.yaml
        #
        #每行数据开头添加“nameserver /”字符，末尾添加“/abroad”字符，生成SmartDNS使用的、指定解析组的GFW文件
        awk '{print "nameserver /" $0 "/abroad"}' dist4/GFW.txt > dist4/GFW.conf
        #
        #
        
        
    - name: Generate GeoIP2 database
      run: |
        CURRENT_DIR=$(pwd)
        cd dist
        ./ipip2mmdb -s ./ChinaIP.txt -d Country.mmdb
        cd $CURRENT_DIR
        
    - name: Push artifacts to release branch
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git reset --hard HEAD
        git fetch
        git checkout release
        
        git checkout --orphan release-orphan
        git rm -rf .
        
        cp -rf dist/ChinaIPv4.txt ./
        cp -rf dist/ChinaIPv6.txt ./
        cp -rf dist/BlacklistIP.conf  ./
        cp -rf dist/WhitelistIP.conf ./
        cp -rf dist/Country.mmdb ./
        cp -rf dist2/BogusNxdomain.conf ./
        cp -rf dist2/Ad·IP.yaml ./
        cp -rf dist3/ChinaDomain.conf ./
        cp -rf dist3/ChinaDomain2.conf ./
        cp -rf dist3/ChinaDomain3.conf ./
        cp -rf dist3/Domestic.yaml ./
        cp -rf dist4/GFW.txt ./
        cp -rf dist4/AutoGFW.txt ./
        cp -rf dist4/GFW.conf ./
        cp -rf dist4/Proxy.yaml ./
                
        git add Country.mmdb         
        git add ChinaIPv4.txt     
        git add ChinaIPv6.txt
        git add GFW.txt             #纯域名
        git add AutoGFW.txt         #Switchy 格式
        git add GFW.conf            #SmartDNS格式
        git add Proxy.yaml          #OpenClash使用
        git add BlacklistIP.conf    #SmartDNS格式
        git add WhitelistIP.conf    #SmartDNS格式
        git add ChinaDomain.conf    #SmartDNS格式
        git add ChinaDomain2.conf   #代理软件使用格式,国内域名
        git add ChinaDomain3.conf   #纯域名
        git add Domestic.yaml       #OpenClash使用
        git add BogusNxdomain.conf  #SmartDNS格式，忽略解析IP
        git add Ad·IP.yaml  #openclash使用的ip格式P
        
        git commit -m "update : $(TZ=UTC-8 date "+%Y-%m-%d %H:%M:%S")"
        git branch -D release
        git branch -m release
            
    - name: GitHub Push
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.PERSON_TOKEN }}
        branch: release
        force: true
        
    - name: Delete workflow
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 1
        keep_minimum_runs: 3
